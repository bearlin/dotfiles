# Update defult keybinding prefix
# ----------------------------------------------------------
# set -g prefix ^b
set -g prefix ^a
# ----------------------------------------------------------

# Hit bind key twice to switch to last active window
# ----------------------------------------------------------
bind ^a last-window
# ----------------------------------------------------------

# Update split window keybinding
# ----------------------------------------------------------
#unbind %
#bind | split-window -h
#bind - split-window -v
# ----------------------------------------------------------

# Set status bar
# ----------------------------------------------------------
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#H'
# ----------------------------------------------------------

# Highlight active window
# ----------------------------------------------------------
# set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-bg red
# ----------------------------------------------------------

# Adding information to your session
# ----------------------------------------------------------
set -g status-right '#[fg=yellow]#(uptime | cut -d "," -f 2-)'
# ----------------------------------------------------------

# Set window notifications
# ----------------------------------------------------------
setw -g monitor-activity on
set -g visual-activity on
# ----------------------------------------------------------

# Automatically set window title
# ----------------------------------------------------------
setw -g automatic-rename on
# ----------------------------------------------------------

# Here are some “vim-ish” bindings
# ----------------------------------------------------------
# use "v" and "s" to do vertical/horizontal splits, like vim
 bind s split-window -v
 bind v split-window -h
# use the vim motion keys to move between panes
 bind h select-pane -L
 bind j select-pane -D
 bind k select-pane -U
 bind l select-pane -R
# use vim motion keys while in copy mode
 setw -g mode-keys vi
# use the vim resize keys, the number at the end is how much the pane will be resized, and 1 is fairly small -- you might want to tweak this.
 bind - resize-pane -D 1
 bind + resize-pane -U 1
 bind < resize-pane -L 1
 bind > resize-pane -R 1
# ----------------------------------------------------------

# Reorder tmux windows
# ----------------------------------------------------------
# http://unix.stackexchange.com/questions/151329/reorder-tmux-windows
  bind -n S-Left swap-window -t -1
  bind -n S-Right swap-window -t +1
# ----------------------------------------------------------

# Border colours
# ----------------------------------------------------------
# https://gist.github.com/napcs/1147532
set-option -g pane-border-fg green
set-option -g pane-border-bg black
set-option -g pane-active-border-fg blue
# set-option -g pane-active-border-bg yellow
# ----------------------------------------------------------

# Set default-terminal color
# ----------------------------------------------------------
# https://teamgaslight.com/blog/vim-plus-tmux-a-perfect-match
set -g default-terminal "screen-256color"
# Note : Also make sure your terminal(e.g. iTerm) colors set to xterm-256color.
# ----------------------------------------------------------

# Enable powerline for tmux
# ----------------------------------------------------------
# References:
# https://powerline.readthedocs.org/en/latest/installation.html
# https://pip.pypa.io/en/stable/installing/
# https://github.com/powerline/fonts
# https://powerline.readthedocs.org/en/latest/usage/other.html#tmux-statusline
# https://github.com/Lokaltog/vim-powerline
# https://coderwall.com/p/yiot4q/setup-vim-powerline-and-iterm2-on-mac-os-x
# http://askubuntu.com/questions/283908/how-can-i-install-and-use-powerline-plugin
#
run-shell "powerline-daemon -q"
# Powerline installation directory can be retrieved via 'pip show powerline-status'
# source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf
# Powerline installation directory also can be retrieved via "vim's plugin 'powerline/powerline'"
source ~/.vim/plugged/powerline/powerline/bindings/tmux/powerline.conf
set -g default-terminal "screen-256color"
# ----------------------------------------------------------

# Fix 'Using the Mac OS X programs pbpaste and pbcopy under tmux does not work'
# ----------------------------------------------------------
# ### [IMPORTANT] MAC may need to 'brew install reattach-to-user-namespace' or the tmux will [exited] at startup ###
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/Usage.md
# http://superuser.com/questions/397076/tmux-exits-with-exited-on-mac-os-x
#
# For zsh
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
# set-option -g default-command "reattach-to-user-namespace -l zsh"
#
# For bash
# if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "reattach-to-user-namespace -l bash"'
# set-option -g default-command "reattach-to-user-namespace -l bash"
# ----------------------------------------------------------

# References : 
# http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
# The best and greatest tmux.conf ever : https://gist.github.com/spicycode/1229612

