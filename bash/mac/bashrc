# http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html

echo "Current shell : $SHELL"

## Colorize the ls output ##
alias ls='ls -G'
## Use a long listing format ##
alias ll='ls -la'
## Show hidden files ##
alias l.='ls -d .* -G'
 
## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

## Start calculator with math support
alias bc='bc -l'

# Extra PATH settings
# [Extra tools under ~/.local/bin/]
# -----------------------------
export PATH=~/.local/bin:$PATH
export PATH=~/bin:$PATH

# Fix python crash with vim and YCM plugin
# export DYLD_FORCE_FLAT_NAMESPACE=1
# -----------------------------

# Enable powerline for bash
# -----------------------------
# References : http://blog.gtwang.org/linux/powerline-adds-powerful-statuslines-and-prompts-to-vim-and-bash/
which powerline-daemon &>/dev/null
if [ $? -eq 0 ]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  # Powerline installation directory can be retrieved via 'pip show powerline-status'
  # POWERLINE_SCRIPT=/Library/Python/2.7/site-packages/powerline/bindings/bash/powerline.sh
  # Powerline installation directory also can be retrieved via "vim's plugin 'powerline/powerline'"
  POWERLINE_SCRIPT=~/.vim/bundle/powerline/powerline/bindings/bash/powerline.sh
  if [ -f $POWERLINE_SCRIPT ]; then
    source $POWERLINE_SCRIPT
  fi
fi
# -----------------------------

# Handy functions and configurations for AOSP development environment
# -----------------------------
# mount the android file image
# function mountAndroid { hdiutil attach ~/ws/aosp/AOSP.dmg -mountpoint /Volumes/android; }
function mountAndroid { hdiutil attach ~/ws/aosp/AOSP.dmg -mountpoint ~/ws/android; }

# unmount the android file image
# function umountAndroid() { hdiutil detach /Volumes/android; }
function umountAndroid() { hdiutil detach ~/ws/android; }

# set the number of open files to be 1024
ulimit -S -n 1024

# curl not based on SecureTransport
# This fix aosp make error "Unsupported curl, please use a curl not based on
# SecureTransport" by below brew install "brew install curl --with-openssl"
export PATH=/usr/local/opt/curl/bin:$PATH
# -----------------------------

# Homebrew python
# -----------------------------
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
# -----------------------------

# Homebrew sbin
# -----------------------------
export PATH="/usr/local/sbin:$PATH"
# -----------------------------

# NVM
# -----------------------------
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# -----------------------------
